import $ from "jquery";

export class UIController {
    // matched_with: ProfileName;

    public addUIControls(): void {

        //NOTE: This will work perfectly since I can already manipulate the DOM long after the Tinder framework is done.
        $('body').append("<div id='jack'><button id='test'>test this!</button></div>");
        $('#jack').css({ 
            "background-color": "red", 
            "border-left": "5px solid #ccc",
            "position": "absolute",
            "top": "20px",
            "right": "50px",
            "height": "200px",
            "width": "200px"
         });
         $('#jack #test').css({ 
            "background-color": "yellow"
        });

        //NOTE: I can even already begin building my own seperate UI controls
        $('#test').on('click', (e:any)=>{
            console.log('Testbutton was clicked!');
            debugger;
        });

    }

    public setStylingOnTinderDOM(){
        // HOWEVER; To use the DOM generated by the framework used by tinder, I need to wait for it to load
        setTimeout(function(){
            console.log("Is the tinder UI framework done yet?");
            console.dir($('.recsCardboard__cardsContainer'));
            $('.recsCardboard__cardsContainer').css({
                'z-index':20
            });
        }, 5000);
    }
}